import streamlit as st
import pandas as pd
from io import BytesIO

st.title('Conversion Rate & Upsell Rate Analyzer')

# –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ —Ñ–∞–π–ª–∏
st.header('1. –ó–∞—Ä–µ–¥–µ—Ç–µ —Å–∏ –¥–≤–∞—Ç–∞ —Ñ–∞–π–ª–∞')
sales_file = st.file_uploader("–ó–∞—Ä–µ–¥–∏ Excel —Å–ø—Ä–∞–≤–∫–∞ —Å –ø—Ä–æ–¥–∞–∂–±–∏", type=["xlsx"])
visits_file = st.file_uploader("–ó–∞—Ä–µ–¥–∏ CSV —Ñ–∞–π–ª —Å –ø–æ—Å–µ—â–µ–Ω–∏—è", type=["csv"])

if sales_file and visits_file:

    sales_data = pd.read_excel(sales_file)
    visits_data = pd.read_csv(visits_file)

    # –ü–æ–∫–∞–∑–≤–∞–º–µ –∫–æ–ª–æ–Ω–∏—Ç–µ, –∑–∞ –¥–∞ –∑–Ω–∞–µ–º –∫–∞–∫–≤–æ –∏–º–∞ –≤ CSV-—Ç–æ
    st.write("üìö –ö–æ–ª–æ–Ω–∏ –≤—ä–≤ —Ñ–∞–π–ª–∞ —Å –ø–æ—Å–µ—â–µ–Ω–∏—è:", visits_data.columns.tolist())

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –∫–æ–ª–æ–Ω–∏—Ç–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞—Ç
    if 'time' in visits_data.columns and 'entry' in visits_data.columns:
        sales_data['–û—Ç –¥–∞—Ç–∞'] = pd.to_datetime(sales_data['–û—Ç –¥–∞—Ç–∞'])
        visits_data['time'] = pd.to_datetime(visits_data['time'])

        sales_data['–î–µ–Ω'] = sales_data['–û—Ç –¥–∞—Ç–∞'].dt.date
        visits_data['–î–µ–Ω'] = visits_data['time'].dt.date

        # –ê–≥—Ä–µ–≥–∏—Ä–∞–Ω–µ –Ω–∞ –ø–æ—Å–µ—â–µ–Ω–∏—è –ø–æ –¥–µ–Ω
        daily_visits = visits_data.groupby('–î–µ–Ω')['entry'].sum().reset_index()
        daily_visits.rename(columns={'entry': '–ü–æ—Å–µ—â–µ–Ω–∏—è'}, inplace=True)

        # –°–ª–∏–≤–∞–Ω–µ –Ω–∞ –¥–∞–Ω–Ω–∏—Ç–µ
        merged_data = pd.merge(sales_data, daily_visits, on='–î–µ–Ω', how='left')

        # –ò–∑—á–∏—Å–ª—è–≤–∞–Ω–µ –Ω–∞ –∫–æ–Ω–≤—ä—Ä—à—ä–Ω —Ä–µ–π—Ç
        merged_data['Conversion Rate (%)'] = (merged_data['–ü—Ä–æ–¥–∞–∂–±–∏'] / merged_data['–ü–æ—Å–µ—â–µ–Ω–∏—è']) * 100

        # –ò–∑—á–∏—Å–ª—è–≤–∞–Ω–µ –Ω–∞ Upsell Rate
        merged_data['Upsell Rate (%)'] = (merged_data['–û–±–æ—Ä–æ—Ç –∫–æ–ª–∏—á.'] / merged_data['–ü—Ä–æ–¥–∞–∂–±–∏']) * 100

        # –ò–∑–≤–æ–¥
        st.header('2. –†–µ–∑—É–ª—Ç–∞—Ç–∏')
        st.dataframe(merged_data)

        # –°–≤–∞–ª—è–Ω–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–µ–Ω–∏—Ç–µ –¥–∞–Ω–Ω–∏
        def to_excel(df):
            output = BytesIO()
            with pd.ExcelWriter(output, engine='xlsxwriter') as writer:
                df.to_excel(writer, index=False, sheet_name='Analysis')
            processed_data = output.getvalue()
            return processed_data

        excel_data = to_excel(merged_data)

        st.download_button(
            label="üíæ –°–≤–∞–ª–∏ –∞–Ω–∞–ª–∏–∑–∞ –≤ Excel",
            data=excel_data,
            file_name='conversion_upsell_analysis.xlsx',
            mime='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
        )

    else:
        st.error('–ì—Ä–µ—à–∫–∞: –§–∞–π–ª—ä—Ç —Å –ø–æ—Å–µ—â–µ–Ω–∏—è —Ç—Ä—è–±–≤–∞ –¥–∞ —Å—ä–¥—ä—Ä–∂–∞ –∫–æ–ª–æ–Ω–∏ "time" –∏ "entry". –ü—Ä–æ–≤–µ—Ä–µ—Ç–µ CSV —Ñ–∞–π–ª–∞ —Å–∏.')

else:
    st.warning('–ú–æ–ª—è, –∑–∞—Ä–µ–¥–µ—Ç–µ –∏ –¥–≤–∞—Ç–∞ —Ñ–∞–π–ª–∞, –∑–∞ –¥–∞ –∏–∑–≤—ä—Ä—à–∏–º –∞–Ω–∞–ª–∏–∑–∞.')
